$date
	Thu Sep 25 15:20:47 2025
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module top $end
$var wire 1 ! clock $end
$var wire 1 " reset $end

$scope module clkg $end
$var reg 1 # clk $end
$var reg 1 $ rst $end
$var integer 32 % counter $end
$upscope $end

$scope module dut $end
$var wire 1 ! clk $end
$var wire 1 " reset $end

$scope module core $end
$var parameter 32 & AWIDTH $end
$var parameter 32 ' DWIDTH $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var reg 32 ( pc [31:0] $end
$var reg 32 ) insn [31:0] $end
$var reg 32 * mem_data_out [31:0] $end
$var reg 32 + probe_addr [31:0] $end
$var reg 32 , probe_data_in [31:0] $end
$var reg 1 - probe_read_en $end
$var reg 1 . probe_write_en $end
$var reg 32 / addr_sel [31:0] $end
$var reg 32 0 data_in_sel [31:0] $end
$var reg 1 1 read_en_sel $end
$var reg 1 2 write_en_sel $end

$scope module u_fetch $end
$var parameter 32 3 DWIDTH $end
$var parameter 32 4 AWIDTH $end
$var parameter 32 5 BASEADDR $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 6 data_i [31] $end
$var wire 1 7 data_i [30] $end
$var wire 1 8 data_i [29] $end
$var wire 1 9 data_i [28] $end
$var wire 1 : data_i [27] $end
$var wire 1 ; data_i [26] $end
$var wire 1 < data_i [25] $end
$var wire 1 = data_i [24] $end
$var wire 1 > data_i [23] $end
$var wire 1 ? data_i [22] $end
$var wire 1 @ data_i [21] $end
$var wire 1 A data_i [20] $end
$var wire 1 B data_i [19] $end
$var wire 1 C data_i [18] $end
$var wire 1 D data_i [17] $end
$var wire 1 E data_i [16] $end
$var wire 1 F data_i [15] $end
$var wire 1 G data_i [14] $end
$var wire 1 H data_i [13] $end
$var wire 1 I data_i [12] $end
$var wire 1 J data_i [11] $end
$var wire 1 K data_i [10] $end
$var wire 1 L data_i [9] $end
$var wire 1 M data_i [8] $end
$var wire 1 N data_i [7] $end
$var wire 1 O data_i [6] $end
$var wire 1 P data_i [5] $end
$var wire 1 Q data_i [4] $end
$var wire 1 R data_i [3] $end
$var wire 1 S data_i [2] $end
$var wire 1 T data_i [1] $end
$var wire 1 U data_i [0] $end
$var reg 32 V pc_o [31:0] $end
$var reg 32 W insn_o [31:0] $end
$upscope $end

$scope module u_memory $end
$var parameter 32 X AWIDTH $end
$var parameter 32 Y DWIDTH $end
$var parameter 32 Z BASE_ADDR $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 [ addr_i [31] $end
$var wire 1 \ addr_i [30] $end
$var wire 1 ] addr_i [29] $end
$var wire 1 ^ addr_i [28] $end
$var wire 1 _ addr_i [27] $end
$var wire 1 ` addr_i [26] $end
$var wire 1 a addr_i [25] $end
$var wire 1 b addr_i [24] $end
$var wire 1 c addr_i [23] $end
$var wire 1 d addr_i [22] $end
$var wire 1 e addr_i [21] $end
$var wire 1 f addr_i [20] $end
$var wire 1 g addr_i [19] $end
$var wire 1 h addr_i [18] $end
$var wire 1 i addr_i [17] $end
$var wire 1 j addr_i [16] $end
$var wire 1 k addr_i [15] $end
$var wire 1 l addr_i [14] $end
$var wire 1 m addr_i [13] $end
$var wire 1 n addr_i [12] $end
$var wire 1 o addr_i [11] $end
$var wire 1 p addr_i [10] $end
$var wire 1 q addr_i [9] $end
$var wire 1 r addr_i [8] $end
$var wire 1 s addr_i [7] $end
$var wire 1 t addr_i [6] $end
$var wire 1 u addr_i [5] $end
$var wire 1 v addr_i [4] $end
$var wire 1 w addr_i [3] $end
$var wire 1 x addr_i [2] $end
$var wire 1 y addr_i [1] $end
$var wire 1 z addr_i [0] $end
$var wire 1 { data_i [31] $end
$var wire 1 | data_i [30] $end
$var wire 1 } data_i [29] $end
$var wire 1 ~ data_i [28] $end
$var wire 1 !! data_i [27] $end
$var wire 1 "! data_i [26] $end
$var wire 1 #! data_i [25] $end
$var wire 1 $! data_i [24] $end
$var wire 1 %! data_i [23] $end
$var wire 1 &! data_i [22] $end
$var wire 1 '! data_i [21] $end
$var wire 1 (! data_i [20] $end
$var wire 1 )! data_i [19] $end
$var wire 1 *! data_i [18] $end
$var wire 1 +! data_i [17] $end
$var wire 1 ,! data_i [16] $end
$var wire 1 -! data_i [15] $end
$var wire 1 .! data_i [14] $end
$var wire 1 /! data_i [13] $end
$var wire 1 0! data_i [12] $end
$var wire 1 1! data_i [11] $end
$var wire 1 2! data_i [10] $end
$var wire 1 3! data_i [9] $end
$var wire 1 4! data_i [8] $end
$var wire 1 5! data_i [7] $end
$var wire 1 6! data_i [6] $end
$var wire 1 7! data_i [5] $end
$var wire 1 8! data_i [4] $end
$var wire 1 9! data_i [3] $end
$var wire 1 :! data_i [2] $end
$var wire 1 ;! data_i [1] $end
$var wire 1 <! data_i [0] $end
$var wire 1 =! read_en_i $end
$var wire 1 >! write_en_i $end
$var reg 32 ?! data_o [31:0] $end
$var reg 32 @! address [31:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope begin genblk3 $end
$var integer 32 A! tick $end
$var reg 2 B! state [1:0] $end

$scope begin pre_check $end
$var integer 32 C! res $end
$upscope $end

$scope begin tick_check $end
$var reg 1 D! res $end
$var reg 1 E! tick_ok $end
$var reg 1 F! correct $end
$var reg 4096 G! msg [4095:0] $end
$upscope $end

$scope task check_mem_read1 $end
$var integer 32 H! idx $end
$var reg 1 I! res $end
$var reg 4096 J! msg [4095:0] $end

$scope begin check_mem_read1_func $end
$var reg 32 K! addr [31:0] $end
$var reg 32 L! data [31:0] $end
$var reg 128 M! p [127:0] $end
$upscope $end
$upscope $end

$scope task check_mem_read2 $end
$var integer 32 N! idx $end
$var reg 1 O! res $end
$var reg 4096 P! msg [4095:0] $end

$scope begin check_mem_read2_func $end
$var reg 32 Q! addr [31:0] $end
$var reg 32 R! data [31:0] $end
$var reg 128 S! p [127:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0#
x$
bx (
bx )
b0 *
bx +
bx ,
x-
x.
bx /
bx 0
x1
x2
bx V
bx W
b0 ?!
bx @!
b0 B!
1D!
xE!
1F!
bx G!
1I!
bx J!
bx K!
bx L!
bx M!
xO!
bx P!
bx Q!
bx R!
bx S!
b100000 &
b100000 '
b100000 3
b100000 4
b1000000000000000000000000 5
b100000 X
b100000 Y
b1000000000000000000000000 Z
b0 %
bx C!
bx A!
bx H!
bx N!
0!
x"
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
x=!
x>!
$end
#1
1#
1!
b0 W
b1 %
1$
b0 )
1"
b1000000000000000000000000 V
b1000000000000000000000000 (
#2
0#
0!
b0 A!
b1000000000000000000000000 +
1-
0.
b0 0
11
02
b1000000000000000000000000 /
0>!
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
1b
0a
0`
0_
0^
0]
0\
0[
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
b0 @!
1=!
#3
1#
1!
b10 %
#4
0#
0!
#5
1#
1!
b11 %
#6
0#
0!
#7
1#
1!
b100 %
#8
0#
0!
#9
1#
1!
b101 %
#10
0#
0!
#11
1#
1!
b110 %
0$
0"
#12
0#
0!
b0 H!
b1111110100000001000000010001001100000001000000000000000000000000 M!
b1000000000000000000000000 K!
b11111101000000010000000100010011 L!
b
0I!
0D!
b
0F!
